# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union
from . import _utilities, _tables

__all__ = [
    'GetNetworkDNSHostTemplateResult',
    'AwaitableGetNetworkDNSHostTemplateResult',
    'get_network_dns_host_template',
]

@pulumi.output_type
class GetNetworkDNSHostTemplateResult:
    """
    A collection of values returned by getNetworkDNSHostTemplate.
    """
    def __init__(__self__, hostname=None, id=None, ip=None, rendered=None):
        if hostname and not isinstance(hostname, str):
            raise TypeError("Expected argument 'hostname' to be a str")
        pulumi.set(__self__, "hostname", hostname)
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        pulumi.set(__self__, "id", id)
        if ip and not isinstance(ip, str):
            raise TypeError("Expected argument 'ip' to be a str")
        pulumi.set(__self__, "ip", ip)
        if rendered and not isinstance(rendered, dict):
            raise TypeError("Expected argument 'rendered' to be a dict")
        pulumi.set(__self__, "rendered", rendered)

    @property
    @pulumi.getter
    def hostname(self) -> str:
        return pulumi.get(self, "hostname")

    @property
    @pulumi.getter
    def id(self) -> str:
        """
        The provider-assigned unique ID for this managed resource.
        """
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def ip(self) -> str:
        return pulumi.get(self, "ip")

    @property
    @pulumi.getter
    def rendered(self) -> Mapping[str, str]:
        return pulumi.get(self, "rendered")


class AwaitableGetNetworkDNSHostTemplateResult(GetNetworkDNSHostTemplateResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetNetworkDNSHostTemplateResult(
            hostname=self.hostname,
            id=self.id,
            ip=self.ip,
            rendered=self.rendered)


def get_network_dns_host_template(hostname: Optional[str] = None,
                                  ip: Optional[str] = None,
                                  opts: Optional[pulumi.InvokeOptions] = None) -> AwaitableGetNetworkDNSHostTemplateResult:
    """
    Use this data source to access information about an existing resource.
    """
    __args__ = dict()
    __args__['hostname'] = hostname
    __args__['ip'] = ip
    if opts is None:
        opts = pulumi.InvokeOptions()
    if opts.version is None:
        opts.version = _utilities.get_version()
    __ret__ = pulumi.runtime.invoke('libvirt:index/getNetworkDNSHostTemplate:getNetworkDNSHostTemplate', __args__, opts=opts, typ=GetNetworkDNSHostTemplateResult).value

    return AwaitableGetNetworkDNSHostTemplateResult(
        hostname=__ret__.hostname,
        id=__ret__.id,
        ip=__ret__.ip,
        rendered=__ret__.rendered)
