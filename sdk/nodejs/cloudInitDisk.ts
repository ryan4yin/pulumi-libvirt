// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

export class CloudInitDisk extends pulumi.CustomResource {
    /**
     * Get an existing CloudInitDisk resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CloudInitDiskState, opts?: pulumi.CustomResourceOptions): CloudInitDisk {
        return new CloudInitDisk(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'libvirt:index/cloudInitDisk:CloudInitDisk';

    /**
     * Returns true if the given object is an instance of CloudInitDisk.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CloudInitDisk {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CloudInitDisk.__pulumiType;
    }

    public readonly metaData!: pulumi.Output<string | undefined>;
    public readonly name!: pulumi.Output<string>;
    public readonly networkConfig!: pulumi.Output<string | undefined>;
    public readonly pool!: pulumi.Output<string | undefined>;
    public readonly userData!: pulumi.Output<string | undefined>;

    /**
     * Create a CloudInitDisk resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: CloudInitDiskArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CloudInitDiskArgs | CloudInitDiskState, opts?: pulumi.CustomResourceOptions) {
        let inputs: pulumi.Inputs = {};
        if (opts && opts.id) {
            const state = argsOrState as CloudInitDiskState | undefined;
            inputs["metaData"] = state ? state.metaData : undefined;
            inputs["name"] = state ? state.name : undefined;
            inputs["networkConfig"] = state ? state.networkConfig : undefined;
            inputs["pool"] = state ? state.pool : undefined;
            inputs["userData"] = state ? state.userData : undefined;
        } else {
            const args = argsOrState as CloudInitDiskArgs | undefined;
            inputs["metaData"] = args ? args.metaData : undefined;
            inputs["name"] = args ? args.name : undefined;
            inputs["networkConfig"] = args ? args.networkConfig : undefined;
            inputs["pool"] = args ? args.pool : undefined;
            inputs["userData"] = args ? args.userData : undefined;
        }
        if (!opts) {
            opts = {}
        }

        if (!opts.version) {
            opts.version = utilities.getVersion();
        }
        super(CloudInitDisk.__pulumiType, name, inputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering CloudInitDisk resources.
 */
export interface CloudInitDiskState {
    readonly metaData?: pulumi.Input<string>;
    readonly name?: pulumi.Input<string>;
    readonly networkConfig?: pulumi.Input<string>;
    readonly pool?: pulumi.Input<string>;
    readonly userData?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a CloudInitDisk resource.
 */
export interface CloudInitDiskArgs {
    readonly metaData?: pulumi.Input<string>;
    readonly name?: pulumi.Input<string>;
    readonly networkConfig?: pulumi.Input<string>;
    readonly pool?: pulumi.Input<string>;
    readonly userData?: pulumi.Input<string>;
}
