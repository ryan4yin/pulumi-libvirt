// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package libvirt

import (
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type Domain struct {
	pulumi.CustomResourceState

	Arch              pulumi.StringOutput               `pulumi:"arch"`
	Autostart         pulumi.BoolPtrOutput              `pulumi:"autostart"`
	BootDevices       DomainBootDeviceArrayOutput       `pulumi:"bootDevices"`
	Cloudinit         pulumi.StringPtrOutput            `pulumi:"cloudinit"`
	Cmdlines          pulumi.MapArrayOutput             `pulumi:"cmdlines"`
	Consoles          DomainConsoleArrayOutput          `pulumi:"consoles"`
	CoreosIgnition    pulumi.StringPtrOutput            `pulumi:"coreosIgnition"`
	Cpu               DomainCpuPtrOutput                `pulumi:"cpu"`
	Description       pulumi.StringPtrOutput            `pulumi:"description"`
	Disks             DomainDiskArrayOutput             `pulumi:"disks"`
	Emulator          pulumi.StringOutput               `pulumi:"emulator"`
	Filesystems       DomainFilesystemArrayOutput       `pulumi:"filesystems"`
	Firmware          pulumi.StringPtrOutput            `pulumi:"firmware"`
	FwCfgName         pulumi.StringPtrOutput            `pulumi:"fwCfgName"`
	Graphics          DomainGraphicsPtrOutput           `pulumi:"graphics"`
	Initrd            pulumi.StringPtrOutput            `pulumi:"initrd"`
	Kernel            pulumi.StringPtrOutput            `pulumi:"kernel"`
	Machine           pulumi.StringOutput               `pulumi:"machine"`
	Memory            pulumi.IntPtrOutput               `pulumi:"memory"`
	Metadata          pulumi.StringPtrOutput            `pulumi:"metadata"`
	Name              pulumi.StringOutput               `pulumi:"name"`
	NetworkInterfaces DomainNetworkInterfaceArrayOutput `pulumi:"networkInterfaces"`
	Nvram             DomainNvramPtrOutput              `pulumi:"nvram"`
	QemuAgent         pulumi.BoolPtrOutput              `pulumi:"qemuAgent"`
	Running           pulumi.BoolPtrOutput              `pulumi:"running"`
	Vcpu              pulumi.IntPtrOutput               `pulumi:"vcpu"`
	Video             DomainVideoPtrOutput              `pulumi:"video"`
	Xml               DomainXmlPtrOutput                `pulumi:"xml"`
}

// NewDomain registers a new resource with the given unique name, arguments, and options.
func NewDomain(ctx *pulumi.Context,
	name string, args *DomainArgs, opts ...pulumi.ResourceOption) (*Domain, error) {
	if args == nil {
		args = &DomainArgs{}
	}
	var resource Domain
	err := ctx.RegisterResource("libvirt:index/domain:Domain", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetDomain gets an existing Domain resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetDomain(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *DomainState, opts ...pulumi.ResourceOption) (*Domain, error) {
	var resource Domain
	err := ctx.ReadResource("libvirt:index/domain:Domain", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Domain resources.
type domainState struct {
	Arch              *string                  `pulumi:"arch"`
	Autostart         *bool                    `pulumi:"autostart"`
	BootDevices       []DomainBootDevice       `pulumi:"bootDevices"`
	Cloudinit         *string                  `pulumi:"cloudinit"`
	Cmdlines          []map[string]interface{} `pulumi:"cmdlines"`
	Consoles          []DomainConsole          `pulumi:"consoles"`
	CoreosIgnition    *string                  `pulumi:"coreosIgnition"`
	Cpu               *DomainCpu               `pulumi:"cpu"`
	Description       *string                  `pulumi:"description"`
	Disks             []DomainDisk             `pulumi:"disks"`
	Emulator          *string                  `pulumi:"emulator"`
	Filesystems       []DomainFilesystem       `pulumi:"filesystems"`
	Firmware          *string                  `pulumi:"firmware"`
	FwCfgName         *string                  `pulumi:"fwCfgName"`
	Graphics          *DomainGraphics          `pulumi:"graphics"`
	Initrd            *string                  `pulumi:"initrd"`
	Kernel            *string                  `pulumi:"kernel"`
	Machine           *string                  `pulumi:"machine"`
	Memory            *int                     `pulumi:"memory"`
	Metadata          *string                  `pulumi:"metadata"`
	Name              *string                  `pulumi:"name"`
	NetworkInterfaces []DomainNetworkInterface `pulumi:"networkInterfaces"`
	Nvram             *DomainNvram             `pulumi:"nvram"`
	QemuAgent         *bool                    `pulumi:"qemuAgent"`
	Running           *bool                    `pulumi:"running"`
	Vcpu              *int                     `pulumi:"vcpu"`
	Video             *DomainVideo             `pulumi:"video"`
	Xml               *DomainXml               `pulumi:"xml"`
}

type DomainState struct {
	Arch              pulumi.StringPtrInput
	Autostart         pulumi.BoolPtrInput
	BootDevices       DomainBootDeviceArrayInput
	Cloudinit         pulumi.StringPtrInput
	Cmdlines          pulumi.MapArrayInput
	Consoles          DomainConsoleArrayInput
	CoreosIgnition    pulumi.StringPtrInput
	Cpu               DomainCpuPtrInput
	Description       pulumi.StringPtrInput
	Disks             DomainDiskArrayInput
	Emulator          pulumi.StringPtrInput
	Filesystems       DomainFilesystemArrayInput
	Firmware          pulumi.StringPtrInput
	FwCfgName         pulumi.StringPtrInput
	Graphics          DomainGraphicsPtrInput
	Initrd            pulumi.StringPtrInput
	Kernel            pulumi.StringPtrInput
	Machine           pulumi.StringPtrInput
	Memory            pulumi.IntPtrInput
	Metadata          pulumi.StringPtrInput
	Name              pulumi.StringPtrInput
	NetworkInterfaces DomainNetworkInterfaceArrayInput
	Nvram             DomainNvramPtrInput
	QemuAgent         pulumi.BoolPtrInput
	Running           pulumi.BoolPtrInput
	Vcpu              pulumi.IntPtrInput
	Video             DomainVideoPtrInput
	Xml               DomainXmlPtrInput
}

func (DomainState) ElementType() reflect.Type {
	return reflect.TypeOf((*domainState)(nil)).Elem()
}

type domainArgs struct {
	Arch              *string                  `pulumi:"arch"`
	Autostart         *bool                    `pulumi:"autostart"`
	BootDevices       []DomainBootDevice       `pulumi:"bootDevices"`
	Cloudinit         *string                  `pulumi:"cloudinit"`
	Cmdlines          []map[string]interface{} `pulumi:"cmdlines"`
	Consoles          []DomainConsole          `pulumi:"consoles"`
	CoreosIgnition    *string                  `pulumi:"coreosIgnition"`
	Cpu               *DomainCpu               `pulumi:"cpu"`
	Description       *string                  `pulumi:"description"`
	Disks             []DomainDisk             `pulumi:"disks"`
	Emulator          *string                  `pulumi:"emulator"`
	Filesystems       []DomainFilesystem       `pulumi:"filesystems"`
	Firmware          *string                  `pulumi:"firmware"`
	FwCfgName         *string                  `pulumi:"fwCfgName"`
	Graphics          *DomainGraphics          `pulumi:"graphics"`
	Initrd            *string                  `pulumi:"initrd"`
	Kernel            *string                  `pulumi:"kernel"`
	Machine           *string                  `pulumi:"machine"`
	Memory            *int                     `pulumi:"memory"`
	Metadata          *string                  `pulumi:"metadata"`
	Name              *string                  `pulumi:"name"`
	NetworkInterfaces []DomainNetworkInterface `pulumi:"networkInterfaces"`
	Nvram             *DomainNvram             `pulumi:"nvram"`
	QemuAgent         *bool                    `pulumi:"qemuAgent"`
	Running           *bool                    `pulumi:"running"`
	Vcpu              *int                     `pulumi:"vcpu"`
	Video             *DomainVideo             `pulumi:"video"`
	Xml               *DomainXml               `pulumi:"xml"`
}

// The set of arguments for constructing a Domain resource.
type DomainArgs struct {
	Arch              pulumi.StringPtrInput
	Autostart         pulumi.BoolPtrInput
	BootDevices       DomainBootDeviceArrayInput
	Cloudinit         pulumi.StringPtrInput
	Cmdlines          pulumi.MapArrayInput
	Consoles          DomainConsoleArrayInput
	CoreosIgnition    pulumi.StringPtrInput
	Cpu               DomainCpuPtrInput
	Description       pulumi.StringPtrInput
	Disks             DomainDiskArrayInput
	Emulator          pulumi.StringPtrInput
	Filesystems       DomainFilesystemArrayInput
	Firmware          pulumi.StringPtrInput
	FwCfgName         pulumi.StringPtrInput
	Graphics          DomainGraphicsPtrInput
	Initrd            pulumi.StringPtrInput
	Kernel            pulumi.StringPtrInput
	Machine           pulumi.StringPtrInput
	Memory            pulumi.IntPtrInput
	Metadata          pulumi.StringPtrInput
	Name              pulumi.StringPtrInput
	NetworkInterfaces DomainNetworkInterfaceArrayInput
	Nvram             DomainNvramPtrInput
	QemuAgent         pulumi.BoolPtrInput
	Running           pulumi.BoolPtrInput
	Vcpu              pulumi.IntPtrInput
	Video             DomainVideoPtrInput
	Xml               DomainXmlPtrInput
}

func (DomainArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*domainArgs)(nil)).Elem()
}
