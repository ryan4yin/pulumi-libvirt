// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package libvirt

import (
	"reflect"

	"github.com/pkg/errors"
	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type Ignition struct {
	pulumi.CustomResourceState

	Content pulumi.StringOutput    `pulumi:"content"`
	Name    pulumi.StringOutput    `pulumi:"name"`
	Pool    pulumi.StringPtrOutput `pulumi:"pool"`
}

// NewIgnition registers a new resource with the given unique name, arguments, and options.
func NewIgnition(ctx *pulumi.Context,
	name string, args *IgnitionArgs, opts ...pulumi.ResourceOption) (*Ignition, error) {
	if args == nil || args.Content == nil {
		return nil, errors.New("missing required argument 'Content'")
	}
	if args == nil {
		args = &IgnitionArgs{}
	}
	var resource Ignition
	err := ctx.RegisterResource("libvirt:index/ignition:Ignition", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetIgnition gets an existing Ignition resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetIgnition(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *IgnitionState, opts ...pulumi.ResourceOption) (*Ignition, error) {
	var resource Ignition
	err := ctx.ReadResource("libvirt:index/ignition:Ignition", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering Ignition resources.
type ignitionState struct {
	Content *string `pulumi:"content"`
	Name    *string `pulumi:"name"`
	Pool    *string `pulumi:"pool"`
}

type IgnitionState struct {
	Content pulumi.StringPtrInput
	Name    pulumi.StringPtrInput
	Pool    pulumi.StringPtrInput
}

func (IgnitionState) ElementType() reflect.Type {
	return reflect.TypeOf((*ignitionState)(nil)).Elem()
}

type ignitionArgs struct {
	Content string  `pulumi:"content"`
	Name    *string `pulumi:"name"`
	Pool    *string `pulumi:"pool"`
}

// The set of arguments for constructing a Ignition resource.
type IgnitionArgs struct {
	Content pulumi.StringInput
	Name    pulumi.StringPtrInput
	Pool    pulumi.StringPtrInput
}

func (IgnitionArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*ignitionArgs)(nil)).Elem()
}
